model Task {
  id          String       @id @default(uuid()) @db.Uuid
  title       String       @unique @db.VarChar(255)
  description String
  status      TaskStatus   @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  tags        String?
  startDate   DateTime?    @db.Timestamptz()
  dueDate     DateTime?    @db.Timestamptz()
  points      Int?
  projectId   String       @db.Uuid
  authorId    String       @db.Uuid
  assigneeId  String?      @db.Uuid
  project     Project      @relation(fields: [projectId], references: [id])
  author      User         @relation("TaskAuthor", fields: [authorId], references: [userId])
  assignee    User?        @relation("TaskAssignee", fields: [assigneeId], references: [userId])
  attachments Attachment[]
  comments    Comment[]
}

enum TaskStatus {
  TODO
  INPROGRESS
  REVIEW
  COMPLETED
}

enum TaskPriority {
  URGENT
  HIGH
  MEDIUM
  LOW
}

model Comment {
  id     String @id @default(uuid()) @db.Uuid
  text   String
  taskId String @db.Uuid
  userId String @db.Uuid
  task   Task   @relation(fields: [taskId], references: [id])
  user   User   @relation(fields: [userId], references: [userId])
}

model Attachment {
  id           String @id @default(uuid()) @db.Uuid
  fileUrl      String
  fileName     String @unique @db.VarChar(255)
  taskId       String @db.Uuid
  uploadedById String @db.Uuid
  task         Task   @relation(fields: [taskId], references: [id])
  uploadedBy   User   @relation(fields: [uploadedById], references: [userId])
}
